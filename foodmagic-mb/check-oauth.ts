// Script para verificar la configuraci√≥n de OAuth
// Ejecutar: npx ts-node check-oauth.ts

import { supabase } from './lib/supabase';

async function checkOAuthConfig() {
    console.log('üîç Verificando configuraci√≥n de OAuth...\n');

    // Verificar variables de entorno
    console.log('‚úÖ Variables de entorno:');
    console.log(`SUPABASE_URL: ${process.env.EXPO_PUBLIC_SUPABASE_URL ? '‚úì Configurada' : '‚ùå Falta'}`);
    console.log(`SUPABASE_ANON_KEY: ${process.env.EXPO_PUBLIC_SUPABASE_ANON_KEY ? '‚úì Configurada' : '‚ùå Falta'}`);
    console.log(`REDIRECT_URL: ${process.env.EXPO_PUBLIC_REDIRECT_URL || 'exp://localhost:8081'}\n`);

    // Intentar conectar con Supabase
    try {
        const { data, error } = await supabase.auth.getSession();
        if (error) {
            console.log('‚ùå Error conectando con Supabase:', error.message);
        } else {
            console.log('‚úÖ Conexi√≥n con Supabase exitosa');
        }
    } catch (err) {
        console.log('‚ùå Error de conexi√≥n:', (err as Error).message);
    }

    // Intentar generar URL de OAuth
    try {
        const { data, error } = await supabase.auth.signInWithOAuth({
            provider: 'google',
            options: {
                redirectTo: process.env.EXPO_PUBLIC_REDIRECT_URL || 'exp://localhost:8081',
            },
        });

        if (error) {
            console.log('‚ùå Error generando OAuth URL:', error.message);
            console.log('üí° Posibles causas:');
            console.log('   - Google Provider no habilitado en Supabase');
            console.log('   - Client ID/Secret no configurados');
            console.log('   - URLs de redirecci√≥n incorrectas');
        } else if (data.url) {
            console.log('‚úÖ OAuth URL generada exitosamente');
            console.log('üåê URL:', data.url);
            console.log('\nüéâ ¬°OAuth configurado correctamente!');
            console.log('   Al hacer login se abrir√°:', data.url);
        }
    } catch (err) {
        console.log('‚ùå Error generando OAuth:', (err as Error).message);
    }

    console.log('\nüìã Pr√≥ximos pasos si hay errores:');
    console.log('1. Ve a Google Cloud Console');
    console.log('2. Crea OAuth 2.0 Client ID');
    console.log('3. Copia Client ID y Secret a Supabase Dashboard');
    console.log('4. Verifica URLs de redirecci√≥n');
}

checkOAuthConfig();
